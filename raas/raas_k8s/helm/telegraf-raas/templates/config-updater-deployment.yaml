apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-updater
  labels:
    run: config-updater
    tier: backend
  annotations:
    com.groupon.conveyor.policies/skip-liveness-probe: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      run: config-updater
      tier: backend
  template:
    metadata:
      labels:
        run: config-updater
        tier: backend
    spec:
      serviceAccountName: raas-mon-sa
      containers:
      - name: config-updater
        image: docker-dev.groupondev.com/raas-config-updater:v0.37
        # image: raas-config-updater:v0.16
        # imagePullPolicy: Never
        resources:
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - name: vol-telegraf-redis-conf-tpl
          mountPath: /etc/config-updater/telegraf-redis-conf-tpl/
        - name: vol-telegraf-redis-latency-conf-tpl
          mountPath: /etc/config-updater/telegraf-redis-latency-conf-tpl/
        - name: vol-telegraf-memcached-conf-tpl
          mountPath: /etc/config-updater/telegraf-memcached-conf-tpl/
        - name: vol-telegraf-memcached-latency-conf-tpl
          mountPath: /etc/config-updater/telegraf-memcached-latency-conf-tpl/
        - name: vol-telegraf-raas-deploy
          mountPath: /etc/config-updater/
        - name: vol-bast
          mountPath: "/etc/bast"
        - name: logs-default
          mountPath: /var/groupon/logs
        - name: token
          mountPath: /var/run/secrets/conveyor/serviceaccount/
        env:
          - name: CONFIG_UPDATER_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: CONFIG_UPDATER_AWS_REGION
            valueFrom:
              configMapKeyRef:
                name: env-vars
                key: aws-region
          - name: CONFIG_UPDATER_TF_REDIS_URL
            value: "https://raw.github.groupondev.com/data/raas_terraform_modules/master/source/redis_instances.yml"
          - name: LOGS_DIR
            value: "/var/groupon/logs/"
          - name: CONF_TPL_PARENT_DIR
            value: "/etc/config-updater/"
          # this env var is appended to User-Agent:
          # https://github.groupondev.com/data/raas/issues/26
          - name: AWS_EXECUTION_ENV
            value: "raas-config-updater"
          - name: AWS_WEB_IDENTITY_TOKEN_FILE
            value: /var/run/secrets/conveyor/serviceaccount/token
          - name: AWS_REGION
            value: us-west-2
        envFrom:
          - configMapRef:
              name: iamrole-raas-role-config
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "find /tmp/config-updater.touched-when-healthy -mmin -2|grep config-updater"
          initialDelaySeconds: 10
          periodSeconds: 50
          timeoutSeconds: 2
          failureThreshold: 3
      - args:
        - -c
        - /etc/filebeat.yml
        env:
        - name: REGION
          value: us-west-2
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KAFKA_ENDPOINT
          value: kafka-elk-broker-staging.snc1
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_PREFIX
          value: logging_staging_
        image: docker.groupondev.com/logging-platform/filebeat:7.5.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "45"
        livenessProbe:
          exec:
            command:
            - pgrep
            - filebeat
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: filebeat
        readinessProbe:
          exec:
            command:
            - pgrep
            - filebeat
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 180m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 75Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: filebeat-config
          subPath: filebeat.yml
        - mountPath: /var/groupon/logs
          name: logs-default
        - mountPath: /etc/envoy/log
          name: envoy-logs
      volumes:
      - name: vol-telegraf-redis-conf-tpl
        configMap:
          name: telegraf-redis-conf-tpl
      - name: vol-telegraf-redis-latency-conf-tpl
        configMap:
          name: telegraf-redis-latency-conf-tpl
      - name: vol-telegraf-memcached-conf-tpl
        configMap:
          name: telegraf-memcached-conf-tpl
      - name: vol-telegraf-memcached-latency-conf-tpl
        configMap:
          name: telegraf-memcached-latency-conf-tpl
      - name: vol-telegraf-raas-deploy
        configMap:
          name: telegraf-raas-deployment
      - name: vol-bast
        secret:
          secretName: bast
          defaultMode: 256
      - name: envoy-logs
        emptyDir: {}
{{- range $name, $dir := fromYaml (include "common.logDirectories" . ) }}
      - name: {{ printf "logs-%s" $name }}
        emptyDir: {}
{{- end }}
      - name: filebeat-config
        configMap:
          name: {{ .Values.serviceId }}--{{ .Values.component }}--{{ .Values.instance }}--filebeat-config
      - name: token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: sts.amazonaws.com
              expirationSeconds: 86400
              path: token
