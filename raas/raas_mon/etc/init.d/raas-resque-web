#! /bin/sh

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

# source function library
 . /etc/rc.d/init.d/functions

PATH=/usr/local/bin:$PATH

BASE=${0##*/}
PROG=/usr/local/bin/resque-web
INIT_LOG=/var/groupon/log/raas_mon/raas-resque-web-init.log
RESQUE_WEB_LOG=/var/groupon/log/raas_mon/raas-resque-web.log
RESQUE_HOME=/var/groupon/raas_mon/raas-resque-web/
PIDFILE_PREFIX='/var/run/resque-web'
function resque_web_dbs () {
  ruby -e '
    require "yaml"
    host = YAML.load_file("/var/tmp/host.yml")
    if resque_web_dbs = host["params"]["resque_web_dbs"]
      resque_web_dbs.each do |k,v|
        resque_web_port = v["resque_web_port"]
        redis_endpoint = v["redis_endpoint"]
        namespace =  v["namespace"]
        puts "#{k};#{resque_web_port};#{redis_endpoint};#{namespace}"
      end
    end
  '
}

case "$1" in
  start)
    echo -n "Starting $BASE: "
    for l in $(resque_web_dbs); do
      array=(${l//;/ }); DBNAME=${array[0]}; RESQUE_WEB_PORT=${array[1]}; REDIS_ENDPOINT=${array[2]}; NAMESPACE=${array[3]}
      PIDFILE=$PIDFILE_PREFIX.$RESQUE_WEB_PORT.pid
      array=(${REDIS_ENDPOINT//:/ }); REDIS_HOST=${array[0]};
      RESQUE_FILE="/var/tmp/resque-web.$REDIS_HOST.rb"
      cp /usr/local/etc/resque-web.rb $RESQUE_FILE
      OPTIONS="--app-dir $RESQUE_HOME --no-launch --log-file $RESQUE_WEB_LOG --pid-file $PIDFILE --port $RESQUE_WEB_PORT $RESQUE_FILE"
      if [ -n "$NAMESPACE" ]; then
        OPTIONS="--namespace resque:$NAMESPACE $OPTIONS"
      fi
      [ ! -e $PIDFILE ] && ($PROG $OPTIONS &) >> $INIT_LOG 2>&1
    done
    success
    echo
    ;;
  stop)
    echo -n "Shutting down $BASE: "
    for PIDFILE in $(ls $PIDFILE_PREFIX*.pid); do
      OPTIONS="--kill --pid-file $PIDFILE"
      [ -e $PIDFILE ] && ($PROG $OPTIONS &) >> $INIT_LOG 2>&1
    done
    # wait till they were actually killed
    # otherwise roller may move /usr/local and
    # prevent /usr/local/bin/resque-web from working
    while ls $PIDFILE_PREFIX*.pid > /dev/null 2>&1; do sleep 0.2; done
    success
    echo
    ;;
  restart)
    $0 stop
    sleep 3
    $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}" >&2
    exit 1
    ;;
esac

exit 0
