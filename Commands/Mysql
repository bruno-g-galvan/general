MYSQL

gds-prd-rds01.prod.us-west-1.aws.groupondev.com
gds-prd-rds02.prod.us-west-1.aws.groupondev.com
gds-prd-rds03.prod.eu-west-1.aws.groupondev.com
gds-stg-rds01.stable.us-west-1.aws.groupondev.com
gds-stg-rds02.stable.us-west-1.aws.groupondev.com
gds-snd-rds00.gensandbox.us-west-1.aws.groupondev.com
gds-prd-jump01.prod.us-west-1.aws.groupondev.com

Gr0up0n!$KaL3$

"username": "replication",
"password": "GaSxrz1twblgEyl"

##Get table size

SELECT table_schema as `Database`, table_name AS `Table`, round(((data_length + index_length) / 1024 / 1024 /1024), 2) `Size in GB` FROM information_schema.TABLES WHERE table_name IN ('point_transaction_audit_records') ORDER BY
(data_length + index_length) DESC;

SELECT table_schema AS "Database",  ROUND(SUM(data_length + index_length) / 1024 / 1024 / 1024 , 2) AS "Size (GB)"  FROM information_schema.TABLES  GROUP BY table_schema;

mysql -h killbill-prod.cluster-czlsgz0xic0p.us-west-1.rds.amazonaws.com -p killbill_production -e 'SELECT table_schema AS "Database",  ROUND(SUM(data_length + index_length) / 1024 / 1024 / 1024, 2) AS "Size (GB)"  FROM information_schema.TABLES  GROUP BY table_schema;'

##List all tables and sizes-

mysql -h killbill-prod.cluster-czlsgz0xic0p.us-west-1.rds.amazonaws.com -p killbill_production -e 'SELECT table_schema as `Database`, table_name AS `Table`, round(((data_length + index_length) / 1024 / 1024 /1024), 2) `Size in GB` FROM information_schema.TABLES ORDER BY (data_length + index_length) DESC limit 10;'

##Foreign key how can we get-
mysql -h gds-goods-stores-prod-rw.prod.us-west-1.aws.groupondev.com -e "select concat(table_name, ' depends on ',referenced_table_name) from information_schema.referential_constraints where constraint_schema = 'goods_stores_production' order by referenced_table_name"

##Descripcion DB-
aws rds describe-db-clusters --region us-west-1 --db-cluster-identifier glive-3rd-party-prod --query 'DBClusters[*]' --output table

##DB Table references-
select concat(table_name, ' depends on ',referenced_table_name) from information_schema.referential_constraints where constraint_schema = 'glive_gia_production' order by referenced_table_name

##DB table rows-
SELECT table_name, table_rows FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'glive_gia_production' AND table_name in ('deals')

##Concat depends on-
mysql -h getaways-content-prod.cluster-czlsgz0xic0p.us-west-1.rds.amazonaws.com -e "select concat(table_name, ' depends on ',referenced_table_name) from information_schema.referential_constraints where constraint_schema = 'travel_content_production' order by referenced_table_name"; printf "%s\n\n"; sleep 1

##Check and increase max connections-

show variables like "max_connections";
mysql> set global max_connections = 200;

## Chequear indices de una DB

SELECT DISTINCT TABLE_NAME, INDEX_NAME FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA = 'your_schema';

##Show mysql users-

SELECT user FROM mysql.user;

## Create RO user

CREATE USER 'campaign_performance_ro'@'%' IDENTIFIED BY 'send_via_DM';
GRANT USAGE ON afl_rta_prod.* TO 'campaign_performance_ro'@'%';
GRANT SELECT ON `aflrta_prod`.* TO 'campaign_performance_ro'@'%'
flush privileges;

##Create DB and user-

CREATE DATABASE fde_prod;

CREATE USER 'fde_prod_app'@'%' IDENTIFIED BY 'APPXVYEqGrU8JnA8CDnT+fViLKb';

GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, TRIGGER ON fde_prod.* TO 'fde_prod_app'@'%';

flush privileges;

##Check percentage of INT auto increment value-

OOM: deckard-cache-staging us-west-2-test

SELECT 
  c.TABLE_NAME,
  c.COLUMN_TYPE,
  c.MAX_VALUE,
  t.AUTO_INCREMENT,
  IF (c.MAX_VALUE > 0, ROUND(100 * t.AUTO_INCREMENT / c.MAX_VALUE, 2), -1) AS "Usage (%)" 
FROM 
  (SELECT 
     TABLE_SCHEMA,
     TABLE_NAME,
     COLUMN_TYPE,
     CASE 
        WHEN COLUMN_TYPE LIKE 'tinyint(1)' THEN 127
        WHEN COLUMN_TYPE LIKE 'tinyint(1) unsigned' THEN 255
        WHEN COLUMN_TYPE LIKE 'smallint(%)' THEN 32767
        WHEN COLUMN_TYPE LIKE 'smallint(%) unsigned' THEN 65535
        WHEN COLUMN_TYPE LIKE 'mediumint(%)' THEN 8388607
        WHEN COLUMN_TYPE LIKE 'mediumint(%) unsigned' THEN 16777215
        WHEN COLUMN_TYPE LIKE 'int(%)' THEN 2147483647
        WHEN COLUMN_TYPE LIKE 'int(%) unsigned' THEN 4294967295
        WHEN COLUMN_TYPE LIKE 'bigint(%)' THEN 9223372036854775807
        WHEN COLUMN_TYPE LIKE 'bigint(%) unsigned' THEN 0
        ELSE 0
     END AS "MAX_VALUE" 
   FROM 
     INFORMATION_SCHEMA.COLUMNS
     WHERE EXTRA LIKE '%auto_increment%'
   ) c

   JOIN INFORMATION_SCHEMA.TABLES t ON (t.TABLE_SCHEMA = c.TABLE_SCHEMA AND t.TABLE_NAME = c.TABLE_NAME)

WHERE
 c.TABLE_SCHEMA = 'editorial_production' 
ORDER BY
 `Usage (%)` DESC;

##Check connections
select id, user, host, db, command, time, state, info from information_schema.processlist;

select user,state,count(1) from information_schema.processlist where user not in ('rdsadmin','gds_admin','rdsrepladmin','checkmk_mon','rdsadmin','event_scheduler') group by 1,2;

##Instance uptime
SELECT
  VARIABLE_VALUE AS Uptime_seconds,
  NOW() AS "Now",
  NOW() - INTERVAL VARIABLE_VALUE SECOND AS "Up since",
  DATEDIFF(NOW(), NOW() - INTERVAL VARIABLE_VALUE SECOND) AS "Uptime_days"
FROM performance_schema.session_status
WHERE VARIABLE_NAME = 'Uptime';

## Skip replica lag error

CALL mysql.rds_skip_repl_error;

## Example new DB
https://groupondev.atlassian.net/browse/GPROD-275776

## Check AUTO_INCREMENT percentage

SELECT
  TABLE_SCHEMA,
  TABLE_NAME,
  IFNULL(
    ROUND(MAX(AUTO_INCREMENT_RATIO) * 100),
    0
  ) AS MAX_AUTO_INCREMENT_PERCENT
FROM (
  SELECT
    TABLE_SCHEMA,
    TABLE_NAME,
    COLUMN_NAME,
    DATA_TYPE,
    COLUMN_TYPE,
    IF(
      LOCATE('unsigned', COLUMN_TYPE) > 0,
      1,
      0
    ) AS IS_UNSIGNED,
    (
      CASE DATA_TYPE
        WHEN 'tinyint' THEN 255
        WHEN 'smallint' THEN 65535
        WHEN 'mediumint' THEN 16777215
        WHEN 'int' THEN 4294967295
        WHEN 'bigint' THEN 18446744073709551615
      END >> IF(LOCATE('unsigned', COLUMN_TYPE) > 0, 0, 1)
    ) AS MAX_VALUE,
    AUTO_INCREMENT,
    AUTO_INCREMENT / (
      CASE DATA_TYPE
        WHEN 'tinyint' THEN 255
        WHEN 'smallint' THEN 65535
        WHEN 'mediumint' THEN 16777215
        WHEN 'int' THEN 4294967295
        WHEN 'bigint' THEN 18446744073709551615
      END >> IF(LOCATE('unsigned', COLUMN_TYPE) > 0, 0, 1)
    ) AS AUTO_INCREMENT_RATIO
  FROM
    INFORMATION_SCHEMA.COLUMNS
    INNER JOIN INFORMATION_SCHEMA.TABLES USING (TABLE_SCHEMA, TABLE_NAME)
  WHERE
    TABLE_SCHEMA NOT IN ('mysql', 'INFORMATION_SCHEMA', 'performance_schema')
    AND EXTRA='auto_increment'
) T
GROUP BY TABLE_SCHEMA, TABLE_NAME
ORDER BY MAX_AUTO_INCREMENT_PERCENT DESC
LIMIT 1;

Deloitte audit 
mysql> select authentication_string,User,host from mysql.user where user='gds_admin';

AWS TO GCP migration
--------------------
SELECT GROUP_CONCAT(CONCAT('"', schema_name, '"') SEPARATOR ',') AS database_list FROM information_schema.schemata \G

SELECT GROUP_CONCAT(CONCAT('"', user, '"') SEPARATOR ',') AS user_list FROM mysql.user \G

ansible-playbook plays/mysql/aws-to-gcp.yml -e"@my-core-gl-us-621-stg.json" -e"replicate=yes"

SELECT user, host FROM mysql.user WHERE account_locked='N';

ALTER USER 'availability_prd'@'%' ACCOUNT LOCK ;

select distinct(user),count(user),db from information_Schema.processlist;
select distinct(user),count(user),db from information_Schema.processlist group by user;

ALTER USER 'c_prod_usr_ro'@'%' ACCOUNT UNLOCK ;
ALTER USER 'rds_client_id'@'%' ACCOUNT UNLOCK ;
ALTER USER 'repl_user'@'%' ACCOUNT UNLOCK ;

SHOW VARIABLES LIKE 'gtid_mode';