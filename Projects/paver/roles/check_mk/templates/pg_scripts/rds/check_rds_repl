#!/usr/bin/env bash

function find_database {
    Vip="$1"
    result=$(psql -p 5432 -h $Vip -t -U gds_admin -d postgres -c "select datname from pg_stat_database where datname not in ('template0','template1','postgres','rdsadmin') order by 1")
    echo "***************************************************Available databases:"
    echo "-------------------------------------------------------------------------------------------"
    echo "${result}"
    echo "-------------------------------------------------------------------------------------------"
}

function find_repl_status {
    Vip="$1"
    Dbname="$2"
    result=$(psql -p 5432 -h $Vip -d $Dbname -t -x -U gds_admin -c "select subscription_name,status from pglogical.show_subscription_status()")
    echo "***************************************************Subscription status:"
    echo "-------------------------------------------------------------------------------------------"
    echo "${result}"
    echo "-------------------------------------------------------------------------------------------"
}


function find_heartbeat_entry {
    Vip="$1"
    Dbname="$2"
    result=$(psql -p 5432 -h $Vip -d $Dbname -t -x -U gds_admin -c "select * from heartbeat.repl_status")
    echo "***************************************************Heartbeat entry:"
    echo "-------------------------------------------------------------------------------------------"
    echo "${result}"
    echo "-------------------------------------------------------------------------------------------"
    echo "***************************************************Replication lag in bytes:"
    echo "-------------------------------------------------------------------------------------------"
    result=$(psql -p 5432 -h $Vip -d $Dbname -t -U gds_admin -c "select pg_size_pretty(pg_wal_lsn_diff(sent_location,replay_location)) as lag from heartbeat.repl_status")
    echo "${result}"
    echo "-------------------------------------------------------------------------------------------"
}

function find_slave_info {
    Vip="$1"
    Dbname="$2"
    result=$(psql -p 5432 -h $Vip -d $Dbname -t -x -U gds_admin -c "select * from pg_stat_replication where application_name like 'walreceiver'")
    echo "***************************************************Pg_stat_replication info(cascading slave, streaming repl rds to rds):"
    echo "-------------------------------------------------------------------------------------------"
    echo "${result}"
    echo "-------------------------------------------------------------------------------------------"
}

if [ $# -lt 1 ]; then
    echo 'no argument given'
    exit 1
elif [ $# -gt 2 ]; then
    echo 'too many arguments'
    exit 1
fi

    vip="$1"
    dbname="$2"

    if [ -z "${dbname}" ]; then find_database ${vip}; else echo "dbname is set to '$dbname'"; fi
    if [ -z "${dbname}" ]; then read -p "Enter database name: " dbname; fi

    find_repl_status ${vip} ${dbname}
    find_heartbeat_entry ${vip} ${dbname}
    find_slave_info ${vip} ${dbname}

