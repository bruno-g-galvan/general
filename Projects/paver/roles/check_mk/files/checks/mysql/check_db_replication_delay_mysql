#!/usr/local/bin/bash
#
#        _/_/_/    _/_/      _/_/_/
#     _/        _/    _/  _/
#      _/_/    _/    _/  _/
#         _/  _/    _/  _/
#  _/_/_/      _/_/      _/_/_/
#
# Check DB Replication delay
# MON-641, sblaurock, 2014-04-02

# help
print_usage (){
        echo ""
        echo "$0 -w --> warning count"
        echo "$0 -c --> critical count"
	echo "$0 -u --> user"
	echo "$0 -p --> port"
        echo "$0 -h --> this help"
	echo "$0 -s --> Socket to check"
        echo ""
        exit 3
}
# commandline options given?
if [ $# -lt 10 ]; then
        echo "- Not all arguments found!"
        print_usage
        exit 3
fi
# fetch commandline options
while test -n "$1"; do
        case "$1" in
        -w)
                warning=$2
                shift
        ;;
        -c)
                critical=$2
                shift
        ;;
	-s)
		Socket=$2
		shift
	;;
	-u)
		User=$2
		shift
	;;
	-p)
		Port=$2
		shift
	;;
        -h)
                print_usage
                shift
        esac
        shift
done
# run psql query
delay=$(mysql -u ${User} -P ${Port} --${Socket} -e "SELECT round(min(unix_timestamp(now()) - unix_timestamp(concat(substr(ts,1,10), ' ', substr(ts,12,8))))) as lag_sec FROM percona.heartbeat;" -s -N)
# prevent calc without query output
if [ ! "$delay" ]; then
        echo "- Got no Output from mysql client"
        exit 2
fi
# status logic
if [ "`echo "$delay > $critical" | bc -l`" = "1" ]; then
	echo "delay=${delay}s; CRIT - Replication Delay is ${delay}s"
	exit 2
elif [ "`echo "$delay > $warning" | bc -l`" = "1" ]; then
        echo "delay=${delay}s; WARN - Replication Delay is ${delay}s"
        exit 1
elif [ "`echo "$delay < $critical" | bc -l`" = "1" ] && [ "`echo "$delay < $warning" | bc -l`" = "1" ]; then
	echo "delay=${delay}s; OK - Replication Delay is ${delay}s"
	exit 0
else
	echo "- Unexpected Output from check"
	exit 3
fi
