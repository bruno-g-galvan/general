- hosts: gds_all
  gather_facts: no 
  become: yes
  vars:
    outputs: []
    datacenter: "{{ inventory_hostname | regex_replace('^.*\\.([^\\.]+)$', '\\1') }}"
  tasks:
   - name: FreeBSD | run | drop hydra from Consul
     shell: |
       exec 2>&1
       service="{{item.value.type}}-{{ item.key | replace("_","-") }}"
       for instance_id in $(curl -s "http://localhost:8500/v1/catalog/service/$service" | sed 's/},{/}|{/g' | tr '|' '\n' | grep -v -F '"Node":"hydra@' | grep -F '"Node":"{{ inventory_hostname }}"' | sed 's/^.*"ServiceID":"\([^"]*\)".*$/\1/')
       do
         echo -n "removing keys for service $service with id $instance_id "
         curl -s -X DELETE "http://localhost:8500/v1/kv/hydra/services/{{ item.value.type }}/{{ item.key | replace("_","-") }}/nodes/$instance_id?recurse=true"
         echo
         echo -n "deregistering service $service with id $instance_id "
         curl -s -X PUT "http://localhost:8500/v1/agent/service/deregister/$instance_id"
         echo
       done
     args:
       executable: /usr/local/bin/bash
     register: log_output
     with_dict: "{{ gds_instances }}"
     when: item.value.hydra is defined and (target_instance is not defined or target_instance == item.key)
     loop_control:
       label: "{{ item.key }}"

   - name: FreeBSD | run | append outputs
     set_fact:
       outputs: "{{ outputs }} + {{ item.stdout_lines }}"
     with_items: "{{ log_output.results }}"
     when: item.skipped is not defined
     loop_control:
       label: "{{ item.item.key }}"

   - name: FreeBSD | run | debug log
     debug:
       msg: "{{ outputs }}"

