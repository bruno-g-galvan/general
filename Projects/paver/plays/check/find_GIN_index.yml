---
# This Playbook will find all GIN index if the version of postgres is NOT 9.4.8
#
# USAGE:
#   ansible-playbook plays/check/find_GIN_index.yml -l gds-snc1-stg-db022m1.snc1
#
#
- hosts: all
  gather_facts: no 
  become: yes
  vars:
    outputs: []
  tasks:
   - name: Check Postgres Version.
     shell: pg_config --version | sed -e s/PostgreSQL\ //g
     register: version_check
     changed_when: false

   - name: PostgreSQL version 
     debug:
       msg: "PostgreSQL {{ version_check.stdout }}"

   - name: Find GIN index
     shell: |
      exec 2>&1
      if [ {{ item.value.type }} == 'postgresql' ]
      then
        for db_idx in {{ item.value.dbnames }}
        do
          DB="$(echo "$db_idx" |  sed -e 's/\[//g' | sed -e 's/\]//g' | sed -e 's/,//g')"
          PK_POSTGRESQL="$(psql -h localhost -p "{{ item.value.ports.postgresql_raw | default('20003')}}" -U "{{ item.value.dba_account_name }}" -d $DB -c "select schemaname,tablename,indexname,indexdef from pg_indexes where indexdef ilike '%jsonb_path_ops%';" 2> /dev/null)"
          if (( $(grep -c . <<<"$PK_POSTGRESQL") > 3 ))
          then
           echo "+-----------------------------------+"
           echo "Instance: {{ item.key }} port: {{ item.value.ports.postgresql_raw | default('20003')}} GIN Index:"
           echo -n "$PK_POSTGRESQL"
          fi
        done 
      fi
     args:
       executable: /usr/local/bin/bash
     register: log_output
     with_dict: "{{ gds_instances }}"
     when:
      - gds_instances is defined
      - item.value.type == 'postgresql'
      - version_check.stdout != "9.4.8" 
     changed_when: False
     loop_control:
       label: "{{ item.key }} Type: {{ item.value.type }}"


   - name: Append outputs
     set_fact:
       outputs: "{{ outputs }} + {{ item.stdout_lines }}"
     with_items: "{{ log_output.results }}"
     when: 
      - item.skipped is not defined
     loop_control:
       label: "{{ item.item.key }}"

   - name: Report
     debug:
       msg: "{{ outputs }}"


